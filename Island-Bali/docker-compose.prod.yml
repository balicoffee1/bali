# docker-compose.prod.yml

version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    volumes:
      - ./init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "PGPASSWORD='12345' psql -h db -U postgres -d island_bali -c 'SELECT 1'" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
  web:
    image: aigam/bali_backend:latest
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
      - redis
    links:
      - db:db
    env_file:
      - .env
    entrypoint: >
      sh -c "python manage.py makemigrations
           python manage.py migrate
           python manage.py collectstatic --noinput
           celery -A island_bali worker -l info &
           celery -A island_bali beat -l info &
           exec gunicorn island_bali.wsgi:application -b 0.0.0.0:8000"


  nginx:
    image: nginx:1.21.3-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - web

  redis:
    image: "redis:latest"
    restart: always
    ports:
      - "6379:6379"

networks:
  postgres:
volumes:
  static_value:
  media_value:
  pg_data:
